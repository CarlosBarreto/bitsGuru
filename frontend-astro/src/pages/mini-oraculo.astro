---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Mini Oráculo del Gurú de Bits">
	<main class="container">
		<div class="interaction-zone">
			<h3 class="interaction-title">Tweet de Sabiduría</h3>
			<p id="instructions">Escribe un hashtag semilla (opcional) y presiona el botón para recibir una perla de sabiduría.</p>
            <input type="text" id="hashtag-input" placeholder="#TuHashtagAquí" />
			<button id="ask-button">Generar Tweet de Sabiduría</button>
		</div>

		<hr class="separator" />

		<div class="interaction-zone">
			<h3 class="interaction-title">Responder a Fans</h3>
			<p id="fan-instructions">Escribe el nombre del fan y su mensaje para generar una respuesta corta.</p>
			<input type="text" id="fan-name-input" placeholder="Nombre del Fan" />
			<textarea id="fan-message-input" placeholder="Mensaje del fan..." maxlength="230"></textarea>
			<div id="char-counter">0/230</div>
			<button id="generate-fan-response-button">Generar Respuesta para Fan</button>
		</div>


		<div id="guru-response-container" class="guru-response-container">
			<h2 class="response-title">Respuesta del Gurú:</h2>
			<p id="guru-response" class="guru-response"></p>
		</div>

        <div id="prompt-container" class="prompt-container">
            <h4 class="response-title">Prompt Enviado a la IA:</h4>
            <pre id="final-prompt"></pre>
        </div>
	</main>
</Layout>

<style is:inline>
	.interaction-zone {
		text-align: center;
		margin-bottom: 2rem;
	}
	.interaction-title {
		color: var(--color-accent);
		margin-bottom: 1rem;
	}
	#instructions, #fan-instructions {
		color: #a7a7a7;
		margin-bottom: 1rem;
		font-style: italic;
	}
    #hashtag-input, #fan-name-input, #fan-message-input {
        width: 100%;
        max-width: 400px;
        padding: 0.75rem;
        border-radius: 8px;
        border: 1px solid #4a4a4a;
        background-color: #1e1b2e;
        color: white;
        font-family: inherit;
        margin-bottom: 1rem;
        display: block;
        margin-left: auto;
        margin-right: auto;
    }
	#fan-message-input {
		min-height: 100px;
		resize: vertical;
	}
	#char-counter {
		color: #a7a7a7;
		font-size: 0.9rem;
		margin-bottom: 1rem;
	}
	#ask-button, #generate-fan-response-button {
        background-color: var(--color-accent);
        color: #000;
		padding: 0.75rem 1.5rem;
		border-radius: 8px;
		border: none;
		font-weight: bold;
		cursor: pointer;
		transition: background-color 0.3s ease;
	}
	#ask-button:hover, #generate-fan-response-button:hover {
        background-color: var(--color-accent-hover);
	}
    #ask-button:disabled, #generate-fan-response-button:disabled {
        background-color: #3a6d62;
        cursor: not-allowed;
    }
	.guru-response-container {
		background-color: rgba(28, 28, 46, 0.7);
		border: 1px solid var(--color-accent);
		border-radius: 8px;
		padding: 1.5rem;
		min-height: 100px;
        display: none; /* Oculto por defecto */
	}
    .prompt-container {
        background-color: #1a1a22;
        border: 1px solid #444;
        border-radius: 8px;
        padding: 1rem;
        margin-top: 1.5rem;
        display: none; /* Oculto por defecto */
    }
    #final-prompt {
        white-space: pre-wrap;
        word-wrap: break-word;
        color: #a0a0a0;
        font-size: 0.9rem;
    }
	.response-title {
		color: var(--color-heading);
		margin-top: 0;
		margin-bottom: 1rem;
		font-size: 1.25rem;
	}
	.guru-response {
		color: #d1d1d1;
		line-height: 1.7;
        white-space: pre-wrap;
        opacity: 0;
        transition: opacity 1s ease-in-out;
	}
    .guru-response.visible {
        opacity: 1;
    }
	.separator {
		border: 0;
		height: 1px;
		background-image: linear-gradient(to right, rgba(0, 0, 0, 0), var(--color-accent), rgba(0, 0, 0, 0));
		margin: 3rem 0;
	}
</style>

<script>
	import { getWisdomTweet, getFanResponse } from '../utils/api.js';

	document.addEventListener('DOMContentLoaded', () => {
		// Wisdom Tweet Elements
		const askButton = document.getElementById('ask-button') as HTMLButtonElement;
		const hashtagInput = document.getElementById('hashtag-input') as HTMLInputElement;
		
		// Fan Response Elements
		const generateFanResponseButton = document.getElementById('generate-fan-response-button') as HTMLButtonElement;
		const fanNameInput = document.getElementById('fan-name-input') as HTMLInputElement;
		const fanMessageInput = document.getElementById('fan-message-input') as HTMLTextAreaElement;
		const charCounter = document.getElementById('char-counter');

		// Shared Response Elements
		const responseContainer = document.getElementById('guru-response-container');
		const guruResponseEl = document.getElementById('guru-response');
        const promptContainer = document.getElementById('prompt-container');
        const finalPromptEl = document.getElementById('final-prompt');


		// Wisdom Tweet Logic
		askButton.addEventListener('click', async () => {
            const seedHashtag = hashtagInput.value.trim();
			showLoadingState('Generando Tweet de Sabiduría...');
			const apiResponse = await getWisdomTweet(seedHashtag);
			showApiResponse(apiResponse, 'Generar otro Tweet de Sabiduría');
		});

		// Fan Response Logic
		fanMessageInput.addEventListener('input', () => {
			const count = fanMessageInput.value.length;
			charCounter.textContent = `${count}/230`;
		});

		generateFanResponseButton.addEventListener('click', async () => {
			const fanName = fanNameInput.value.trim();
			const fanMessage = fanMessageInput.value.trim();

			if (!fanName || !fanMessage) {
				alert('Por favor, completa el nombre y el mensaje del fan.');
				return;
			}
			
			showLoadingState('Generando Respuesta para Fan...');
			const apiResponse = await getFanResponse(fanName, fanMessage);
			showApiResponse(apiResponse, 'Generar otra Respuesta para Fan');
		});

		function showLoadingState(buttonText) {
            askButton.disabled = true;
			generateFanResponseButton.disabled = true;
            askButton.textContent = 'Generando...';
			generateFanResponseButton.textContent = 'Generando...';

            responseContainer.style.display = 'block';
            promptContainer.style.display = 'none';
            guruResponseEl.classList.remove('visible');
            guruResponseEl.textContent = 'El Gurú está meditando...';
            guruResponseEl.classList.add('visible');
		}

		function showApiResponse(apiResponse, buttonText) {
			guruResponseEl.classList.remove('visible');
            
            setTimeout(() => {
                guruResponseEl.textContent = apiResponse.respuesta || apiResponse.error || "Respuesta no encontrada.";
                guruResponseEl.classList.add('visible');

                if (apiResponse.prompt) {
                    promptContainer.style.display = 'block';
                    finalPromptEl.textContent = apiResponse.prompt;
                }

                askButton.disabled = false;
				generateFanResponseButton.disabled = false;
                askButton.textContent = 'Generar Tweet de Sabiduría';
				generateFanResponseButton.textContent = 'Generar Respuesta para Fan';
            }, 500);
		}
	});
</script>
